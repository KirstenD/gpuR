#!/bin/sh

GPPVERSION=$(g++ -dumpversion)
echo "g++ version = ${GPPVERSION}"

if [ ${R_ARCH}="/x64" ] ; then
    if [ ! -z "$OPENCL_LIB" ]; then
        # custom paths
        echo "Using OPENCL_LIB =" $OPENCL_LIB
        LIBS="PKG_LIBS=-L$OPENCL_LIB -lOpenCL -Wl,-rpath,$OPENCL_LIB"
    elif [ ! -z "$CUDA_HOME" ]; then
        # CUDA SDK
        echo "using CUDA_HOME"
        OPENCL_INC=$CUDA_HOME/include
        LIBS="PKG_LIBS=-L$CUDA_HOME/lib/x64 -lOpenCL -Wl,-rpath,$CUDA_HOME/lib/x64"
    elif [ ! -z "$AMDAPPSDKROOT" ]; then
        # AMD SDK
        echo "using AMDAPPSDKROOT"
        OPENCL_INC=$AMDAPPSDKROOT/include
        LIBS="PKG_LIBS=-L$AMDAPPSDKROOT/lib/x86_64 -lOpenCL -Wl,-rpath,$AMDAPPSDKROOT/lib/x86_64"
    elif [ ! -z "$INTELOCLSDKROOT" ]; then
        # Intel SDK
        echo "using INTELOCLSDKROOT"
        OPENCL_INC=$INTELOCLSDKROOT/include
        LIBS="PKG_LIBS=-L$INTELOCLSDKROOT/lib/x64 -lOpenCL -Wl,-rpath,$INTELOCLSDKROOT/lib/x64"
    else
        echo "OPENCL_LIB not set, trying default lib location"
        LIBS="PKG_LIBS=-lOpenCL"
        
        echo "Checking OpenCL C++ API"
        
        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set, using default include directory /usr/include"
            OPENCL_INC=/usr/include/
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
        fi
    fi
else
    if [ ! -z "$OPENCL_LIB" ]; then
        # custom paths
        echo "Using OPENCL_LIB =" $OPENCL_LIB
        LIBS="PKG_LIBS=-L$OPENCL_LIB -lOpenCL -Wl,-rpath,$OPENCL_LIB"
    elif [ ! -z "$CUDA_HOME" ]; then
        # CUDA SDK
        echo "using CUDA_HOME"
        OPENCL_INC=$CUDA_HOME/include
        LIBS="PKG_LIBS=-L$CUDA_HOME/lib/Win32 -lOpenCL -Wl,-rpath,$CUDA_HOME/lib/Win32"
    elif [ ! -z "$AMDAPPSDKROOT" ]; then
        # AMD SDK
        echo "using AMDAPPSDKROOT"
        OPENCL_INC=$AMDAPPSDKROOT/include
        LIBS="PKG_LIBS=-L$AMDAPPSDKROOT/lib/x86 -lOpenCL -Wl,-rpath,$AMDAPPSDKROOT/lib/x86"
    elif [ ! -z "$INTELOCLSDKROOT" ]; then
        # Intel SDK
        echo "using INTELOCLSDKROOT"
        OPENCL_INC=$INTELOCLSDKROOT/include
        LIBS="PKG_LIBS=-L$INTELOCLSDKROOT/lib/x86 -lOpenCL -Wl,-rpath,$INTELOCLSDKROOT/lib/x86"
    else
        echo "OPENCL_LIB not set, trying default lib location"
        LIBS="PKG_LIBS=-lOpenCL"
        
        echo "Checking OpenCL C++ API"
        
        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set"
            exit 1
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
        fi
    fi
fi


# if [ ${R_ARCH}="/x64" ] ; then
#     if test -z "${OPENCL_LIB64}" ; then
#         echo "OPENCL_LIB64 not found!"
#         if test -z "${OPENCL_LIB32}" ; then
#             echo "OPENCL_LIB32 not found!"
#             exit 1
#         else
#             echo "Only OPENCL_LIB32 found, attempting only 32 bit build"
#             echo "OPENCL_LIB32 set to ${OPENCL_LIB32}"
#         fi
#     else
#         echo "OPENCL_LIB64 set to ${OPENCL_LIB64}"
#         OPENCL_LIB=${OPENCL_LIB64}
#     fi
# else
#     if test -z "${OPENCL_LIB32}" ; then
#         echo "OPENCL_LIB32 not found!"
#         exit 1
#     else
#         echo "OPENCL_LIB32 set to ${OPENCL_LIB32}"
#         OPENCL_LIB=${OPENCL_LIB32}
#     fi
# fi

