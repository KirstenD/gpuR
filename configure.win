#!/bin/sh

GPPVERSION=$(g++ -dumpversion)
echo "g++ version = ${GPPVERSION}"

FLAGS="PKG_CPPFLAGS=-I../inst/include"

if [ ${R_ARCH}="/x64" ] ; then
    if [ ! -z "$OPENCL_LIB" ]; then
        # custom paths
        echo "Using OPENCL_LIB =" $OPENCL_LIB
        LIBS="PKG_LIBS=-L'$OPENCL_LIB' -lOpenCL -Wl,-rpath,'$OPENCL_LIB'"
        
        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set"
            exit 1
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
        fi
        
    elif [ ! -z "$CUDA_HOME" ]; then
        # CUDA SDK
        echo "using CUDA_HOME"
        LIBS="PKG_LIBS=-L'$CUDA_HOME/lib/x64' -lOpenCL -Wl,-rpath,'$CUDA_HOME/lib/x64'"
        FLAGS="${FLAGS} -I'${CUDA_HOME}/include'"
        
    elif [ ! -z "$CUDA_PATH" ]; then
        # CUDA SDK
        echo "using CUDA_PATH"
        LIBS="PKG_LIBS=-L'$CUDA_PATH/lib/x64' -lOpenCL -Wl,-rpath,'$CUDA_PATH/lib/x64'"
        FLAGS="${FLAGS} -I'${CUDA_PATH}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
    
    elif [ ! -z "$AMDAPPSDKROOT" ]; then
        # AMD SDK
        echo "using AMDAPPSDKROOT"
        LIBS="PKG_LIBS=-L'$AMDAPPSDKROOT/lib/x86_64' -lOpenCL -Wl,-rpath,'$AMDAPPSDKROOT/lib/x86_64'"
        FLAGS="${FLAGS} -I'${AMDAPPSDKROOT}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
    
    elif [ ! -z "$INTELOCLSDKROOT" ]; then
        # Intel SDK
        echo "using INTELOCLSDKROOT"
        LIBS="PKG_LIBS=-L'$INTELOCLSDKROOT/lib/x64' -lOpenCL -Wl,-rpath,'$INTELOCLSDKROOT/lib/x64'"
        FLAGS="${FLAGS} -I'${INTELOCLSDKROOT}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
    
    else
        echo "OPENCL_LIB not set, trying default lib location"
        LIBS="PKG_LIBS=-lOpenCL"

        echo "Checking OpenCL C++ API"

        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set"
            exit 1
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
            FLAGS="${FLAGS} -I${OPENCL_INC}"
            FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
        fi
    fi
else
    if [ ! -z "$OPENCL_LIB" ]; then
        # custom paths
        echo "Using OPENCL_LIB =" $OPENCL_LIB
        LIBS="PKG_LIBS=-L'$OPENCL_LIB -lOpenCL -Wl,-rpath,$OPENCL_LIB'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        
        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set"
            exit 1
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
        fi
        
    elif [ ! -z "$CUDA_HOME" ]; then
        # CUDA SDK
        echo "using CUDA_HOME"
        LIBS="PKG_LIBS=-L'$CUDA_HOME/lib/Win32' -lOpenCL -Wl,-rpath,'$CUDA_HOME/lib/Win32'"
        FLAGS="${FLAGS} -I'${CUDA_HOME}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
        
    elif [ ! -z "$CUDA_PATH" ]; then
        # CUDA SDK
        echo "using CUDA_PATH"
        LIBS="PKG_LIBS=-L'$CUDA_PATH/lib/win32' -lOpenCL -Wl,-rpath,'$CUDA_PATH/lib/win32'"
        FLAGS="${FLAGS} -I'${CUDA_PATH}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
        
    elif [ ! -z "$AMDAPPSDKROOT" ]; then
        # AMD SDK
        echo "using AMDAPPSDKROOT"
        LIBS="PKG_LIBS=-L'$AMDAPPSDKROOT/lib/x86' -lOpenCL -Wl,-rpath,'$AMDAPPSDKROOT/lib/x86'"
        FLAGS="${FLAGS} -I'${AMDAPPSDKROOT}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
        
    elif [ ! -z "$INTELOCLSDKROOT" ]; then
        # Intel SDK
        echo "using INTELOCLSDKROOT"
        LIBS="PKG_LIBS=-L'$INTELOCLSDKROOT/lib/x86' -lOpenCL -Wl,-rpath,'$INTELOCLSDKROOT/lib/x86'"
        FLAGS="${FLAGS} -I'${INTELOCLSDKROOT}/include'"
        LIBS=$(echo $LIBS | sed 's/\\/\//g')
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
    else
        echo "OPENCL_LIB not set, trying default lib location"
        LIBS="PKG_LIBS=-lOpenCL"

        echo "Checking OpenCL C++ API"

        if ${OPENCL_INC+"false"}; then
            echo "OPENCL_INC not set"
            exit 1
        else
            echo "Using OPENCL_INC = " $OPENCL_INC
            FLAGS="${FLAGS} -I${OPENCL_INC}"
        fi
        
        FLAGS=$(echo $FLAGS | sed 's/\\/\//g')
    fi
fi

echo "CXX_STD=CXX11" > src/Makevars.win
echo "${FLAGS}" >> src/Makevars.win
echo "${LIBS}" >> src/Makevars.win

# echo "$OPENCL_INC"
# echo "$OPENCL_LIB32"
# echo "$OPENCL_LIB64"
# sed -i "s@OPENCL_INC@$OPENCL_INC@g" src/Makevars.win
# sed -i "s@OPENCL_LIB64@$OPENCL_LIB64@g" src/Makevars.win
# sed -i "s@OPENCL_LIB32@$OPENCL_LIB32@g" src/Makevars.win

# exit 1
