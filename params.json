{"name":"gpuR","tagline":"R interface to use GPU's","body":"# gpuR\r\n\r\n### Build Status\r\n|                 | Build           | Dev             |\r\n|-----------------|-----------------|-----------------|\r\n| Linux x86_64    | [![Build Status](https://travis-ci.org/cdeterman/gpuR.png?branch=master)](https://travis-ci.org/cdeterman/gpuR)      | [![Build Status](https://travis-ci.org/cdeterman/gpuR.png?branch=develop)](https://travis-ci.org/cdeterman/gpuR) |\r\n| OSX             | [![Build Status](https://travis-ci.org/cdeterman/gpuR.png?branch=macosx)](https://travis-ci.org/cdeterman/gpuR)          | |\r\n| Windows x86     | [![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/github/cdeterman/gpuR?branch=master&svg=true)](https://ci.appveyor.com/project/cdeterman/gpuR)     | [![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/github/cdeterman/gpuR?branch=develop&svg=true)](https://ci.appveyor.com/project/cdeterman/gpuR) |\r\n\r\nTest coverage: [![Coverage Status](https://coveralls.io/repos/cdeterman/gpuR/badge.svg)](https://coveralls.io/r/cdeterman/gpuR?branch=master)\r\n\r\nCommunity Use: [![Downloads](http://cranlogs.r-pkg.org/badges/gpuR?color=brightgreen)](http://www.r-pkg.org/pkg/gpuR)\r\n\r\nWelcome to my R package for simple GPU computing.  Although there are a few\r\nexisting packages to leverage the power of GPU's they are either specific\r\nto one brand (e.g. NVIDIA) or are not very user friendly.  The goal of this\r\npackage is to provide the user a very simple R API that can be used with\r\nany GPU (via an OpenCL backend).  This is accomplished by interfacing with the \r\nViennaCL library that I have packaged in the R package \r\n[RViennaCL](http://github.com/cdeterman/RViennaCL).  To make the R API simple,\r\nI created new classes similar to the structure of the \r\n[Matrix](http://cran.r-project.org/web/packages/Matrix/index.html)\r\npackage.  By doing so, typical methods may be overloaded to make for a very\r\npleasing sytax.  For example, to perform vector addition the syntax is: \r\n\r\n```r\r\nA <- seq.int(from=0, to=999)\r\nB <- seq.int(from=1000, to=1)\r\ngpuA <- gpuVector(A)\r\ngpuB <- gpuVector(B)\r\n\r\nC <- A + B\r\ngpuC <- gpuA + gpuB\r\n\r\nall(C == gpuC)\r\n[1] TRUE\r\n```\r\n\r\nI also recommend you read the vignette I included with this package to\r\nget a better understanding of its' capabilities.\r\n\r\n```r\r\nvignette(\"gpuR\")\r\n```\r\n\r\nPlease note, all the functions herein use an OpenCL backend.  If you prefer\r\nto have a CUDA based backend, please see my other package \r\n[gpuRcuda](http://github.com/cdeterman/gpuRcuda) which is simply an extension\r\non top of this package where all functions herein are still applicable\r\nbut also have the CUDA option available.  \r\n\r\n# INSTALL\r\nPlease see my [github wiki](https://github.com/cdeterman/gpuR/wiki) for\r\ninstallation instructions relevant to your operating system.\r\n\r\n# Things to Do\r\n1. Multiple GPU support\r\n2. Iterative solvers (e.g. QR, SVD, etc.)\r\n3. Would love any suggestions :) (submit in the issues)\r\n\r\n# Testing Hardware\r\nI would love volunteers, who have additional hardware (e.g. different GPU vendors, multiple GPUs), willing to test this package.  As an individual developer I can't possibly have access to every GPU on the market so the community testing would be immensely helpful.  If you so wish to test and you find an error, please open an issue on my [github](https://github.com/cdeterman/gpuR/issues) with the device description (at least name such as NVIDIA GeForce GTX 970).  I will do my best to help troubleshoot these problems.  Naturally I would appreciate any contributions if solved by users :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}