####################################################################
# configure for package gpuR
# Charles E. Determan Jr.
#
# Note - this assumes that when installing from environmental variables
# that the user wants the 64-bit install


FLAGS="PKG_CPPFLAGS=-I../inst/include"

# check OS
case `uname` in
    Darwin* )
        echo "Darwin OS"
        
        if [ ! -z "$OPENCL_LIB" ]; then
            # custom paths
            echo "Using OPENCL_LIB = " $OPENCL_LIB
            LIBS="PKG_LIBS=-L$OPENCL_LIB -framework OpenCL -Wl,-rpath,$OPENCL_LIB"
            
            if ${OPENCL_INC+"false"}; then
                echo "OPENCL_INC not set, using default include directory"
                OPENCL_INC=/System/Library/Frameworks/OpenCL.framework/Headers/
            else
                echo "Using OPENCL_INC = " $OPENCL_INC
            fi
            
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            
        elif [ ! -z "$CUDA_HOME" ]; then
            # CUDA SDK
            OPENCL_INC=$CUDA_HOME/include
            FLAGS="${FLAGS} -I'${CUDA_HOME}/include'"
            LIBS="PKG_LIBS=-L$CUDA_HOME/lib64 -framework OpenCL -Wl,-rpath,$CUDA_HOME/lib64"
        elif [ ! -z "$AMDAPPSDKROOT" ]; then
            # AMD SDK
            OPENCL_INC=$AMDAPPSDKROOT/include
            FLAGS="${FLAGS} -I'${AMDAPPSDKROOT}/include'"
            LIBS="PKG_LIBS=-L$AMDAPPSDKROOT/lib/x86_64 -framework OpenCL -Wl,-rpath,$AMDAPPSDKROOT/lib/x86_64"
        elif [ ! -z "$INTELOCLSDKROOT" ]; then
            # Intel SDK
            echo "using INTELOCLSDKROOT"
            OPENCL_INC=$INTELOCLSDKROOT/include
            FLAGS="${FLAGS} -I'${INTELOCLSDKROOT}/include'"
            LIBS="PKG_LIBS=-L$INTELOCLSDKROOT/lib/x64 -framework -Wl,-rpath,$INTELOCLSDKROOT/lib/x64"
        else
            echo "OPENCL_LIB not set, trying default lib location"
            LIBS="PKG_LIBS=-framework OpenCL"
            
            echo "Checking OpenCL C++ API"
            
            if ${OPENCL_INC+"false"}; then
                echo "OPENCL_INC not set, using default include directory"
                OPENCL_INC=/System/Library/Frameworks/OpenCL.framework/Headers/
            else
                echo "Using OPENCL_INC = " $OPENCL_INC
            fi
        fi
        
        if test -e "$OPENCL_INC/cl2.hpp"; then
            FLAGS="${FLAGS} -I$OPENCL_INC -DHAVE_CL_CL2_HPP"
            echo "cl2.hpp header exists"
        else
            if test -e "$OPENCL_INC/cl.hpp"; then
                FLAGS="${FLAGS} -I$OPENCL_INC"
                echo "cl.hpp header exists"
            else
                echo "Error: No OpenCL C++ API found; try setting OPENCL_INC"
                exit 1
            fi
        fi
        ;;
    Linux* )
        echo "Linux OS"
    
        if [ ! -z "$OPENCL_LIB" ]; then
            # custom paths
            echo "Using OPENCL_LIB =" $OPENCL_LIB
            LIBS="PKG_LIBS=-L$OPENCL_LIB -lOpenCL -Wl,-rpath,$OPENCL_LIB"
            if ${OPENCL_INC+"false"}; then
                echo "OPENCL_INC not set, using default include directory"
                OPENCL_INC="-lOpenCL"
            else
                echo "Using OPENCL_INC = " $OPENCL_INC
            fi
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            
        elif [ ! -z "$CUDA_HOME" ]; then
            # CUDA SDK
            echo "using CUDA_HOME"
            OPENCL_INC=$CUDA_HOME/include
            LIBS="PKG_LIBS=-L$CUDA_HOME/lib64 -lOpenCL -Wl,-rpath,$CUDA_HOME/lib64"
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            
        elif [ ! -z "$AMDAPPSDKROOT" ]; then
            # AMD SDK
            echo "using AMDAPPSDKROOT"
            OPENCL_INC=$AMDAPPSDKROOT/include
            LIBS="PKG_LIBS=-L$AMDAPPSDKROOT/lib/x86_64 -lOpenCL -Wl,-rpath,$AMDAPPSDKROOT/lib/x86_64"
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            
        elif [ ! -z "$INTELOCLSDKROOT" ]; then
            # Intel SDK
            echo "using INTELOCLSDKROOT"
            OPENCL_INC=$INTELOCLSDKROOT/include
            LIBS="PKG_LIBS=-L$INTELOCLSDKROOT/lib/x64 -lOpenCL -Wl,-rpath,$INTELOCLSDKROOT/lib/x64"
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
            
        else
            echo "OPENCL_LIB not set, trying default lib location"
            LIBS="PKG_LIBS=-lOpenCL"
            
            echo "Checking OpenCL C++ API"
            
            if ${OPENCL_INC+"false"}; then
                echo "OPENCL_INC not set, using default include directory /usr/include"
                OPENCL_INC=/usr/include/
            else
                echo "Using OPENCL_INC = " $OPENCL_INC
            fi
            FLAGS="${FLAGS} -I'${OPENCL_INC}'"
        fi
    
        if test -e "$OPENCL_INC/CL/cl2.hpp"; then
            FLAGS="${FLAGS} -I$OPENCL_INC -DHAVE_CL_CL2_HPP"
            echo "cl2.hpp header exists"
        else
            if test -e "$OPENCL_INC/CL/cl.hpp"; then
                FLAGS="${FLAGS} -I$OPENCL_INC"
                echo "cl.hpp header exists"
            else
                echo "Error: No OpenCL C++ API found; try installing opencl-headers or setting OPENCL_INC"
                exit 1
            fi
        fi
        ;;
    Solaris*) 
        echo "SOLARIS currently not supported" 
    ;;
    *)        
        echo "unknown: `uname`" 
        ;;
esac

echo "CXX_STD=CXX11" > src/Makevars
echo "${FLAGS}" >> src/Makevars
echo "${LIBS}" >> src/Makevars



